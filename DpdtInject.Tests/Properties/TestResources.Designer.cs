//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DpdtInject.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DpdtInject.Tests.Properties.TestResources", typeof(TestResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyChildren0
        ///{
        ///    public partial class ActivationExcessiveTooManyChildren0_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyChildren0_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyChildren0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyChildren1
        ///{
        ///    public partial class ActivationExcessiveTooManyChildren1_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyChildren1_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyChildren1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyChildren2
        ///{
        ///    public partial class ActivationExcessiveTooManyChildren2_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyChildren2_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyChildren2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyChildren3
        ///{
        ///    public partial class ActivationExcessiveTooManyChildren3_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyChildren3_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyChildren3_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyRoots0
        ///{
        ///    public partial class ActivationExcessiveTooManyRoots0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                .When(rc =&gt; true)
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyRoots0_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyRoots0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyRoots1
        ///{
        ///    public partial class ActivationExcessiveTooManyRoots1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                .When(rc =&gt; false)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyRoots1_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyRoots1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyRoots2
        ///{
        ///    public partial class ActivationExcessiveTooManyRoots2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                .When(rc =&gt; true)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyRoots2_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyRoots2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Threading;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Activation.Excessive.TooManyRoots3
        ///{
        ///    public partial class ActivationExcessiveTooManyRoots3_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithSingletonScope()
        ///                .When(rc =&gt; false)
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ActivationExcessiveTooManyRoots3_Cluster {
            get {
                return ResourceManager.GetString("ActivationExcessiveTooManyRoots3_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.Different
        ///{
        ///    public partial class ClusterGenericDifferent_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        }
        ///    }
        ///
        ///    public partial cl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferent_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferent_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentConditional0
        ///{
        ///    public partial class ClusterGenericDifferentConditional0_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                //.Setup&lt;MustBeCros [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentConditional0_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentConditional0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentConditional1
        ///{
        ///    public partial class ClusterGenericDifferentConditional1_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentConditional1_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentConditional1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentConditional2
        ///{
        ///    public partial class ClusterGenericDifferentConditional2_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt; rt.Paren [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentConditional2_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentConditional2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentConditional3
        ///{
        ///    public partial class ClusterGenericDifferentConditional3_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt; rt.Paren [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentConditional3_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentConditional3_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentConditional4
        ///{
        ///    public partial class ClusterGenericDifferentConditional4_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt; rt.Paren [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentConditional4_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentConditional4_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.Generic.DifferentFunc
        ///{
        ///    public partial class ClusterGenericDifferentFunc_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterGenericDifferentFunc_Cluster {
            get {
                return ResourceManager.GetString("ClusterGenericDifferentFunc_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.NonGeneric.Different
        ///{
        ///    public partial class ClusterNonGenericDifferent_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        }
        ///    }
        ///
        ///    public part [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterNonGenericDifferent_Cluster {
            get {
                return ResourceManager.GetString("ClusterNonGenericDifferent_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.NonGeneric.DifferentConditional0
        ///{
        ///    public partial class ClusterNonGenericDifferentConditional0_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterNonGenericDifferentConditional0_Cluster {
            get {
                return ResourceManager.GetString("ClusterNonGenericDifferentConditional0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.NonGeneric.DifferentConditional1
        ///{
        ///    public partial class ClusterNonGenericDifferentConditional1_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .When(rt =&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterNonGenericDifferentConditional1_Cluster {
            get {
                return ResourceManager.GetString("ClusterNonGenericDifferentConditional1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.NonGeneric.DifferentFunc
        ///{
        ///    public partial class ClusterNonGenericDifferentFunc_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterNonGenericDifferentFunc_Cluster {
            get {
                return ResourceManager.GetString("ClusterNonGenericDifferentFunc_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Cluster.UnknownEvenInParent
        ///{
        ///    public partial class ClusterUnknownEvenInParent_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            //this cluster SHOULD NOT have a IA binding
        ///            //because we&apos;re checked for UNKNOWN bi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClusterUnknownEvenInParent_Cluster {
            get {
                return ResourceManager.GetString("ClusterUnknownEvenInParent_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.Generic.Hierarchy2
        ///{
        ///    public partial class ConditionalGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithTransientScope()
        ///                .When(rc =&gt; false)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ConditionalGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.Generic.Hierarchy2SameConstant
        ///{
        ///    public partial class ConditionalGenericHierarchy2SameConstant_Cluster : DefaultCluster
        ///    {
        ///        public static readonly A ConstantA1 = new();
        ///        public static readonly A ConstantA2 = new();
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .WithConstScope(ConstantA1)        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalGenericHierarchy2SameConstant_Cluster {
            get {
                return ResourceManager.GetString("ConditionalGenericHierarchy2SameConstant_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.Generic.Hierarchy3First
        ///{
        ///    public partial class ConditionalGenericHierarchy3First_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalGenericHierarchy3First_Cluster {
            get {
                return ResourceManager.GetString("ConditionalGenericHierarchy3First_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.Generic.Hierarchy3Second
        ///{
        ///    public partial class ConditionalGenericHierarchy3Second_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalGenericHierarchy3Second_Cluster {
            get {
                return ResourceManager.GetString("ConditionalGenericHierarchy3Second_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.Generic.OnlyOneInMiddle
        ///{
        ///    public partial class ConditionalGenericOnlyOneInMiddle_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalGenericOnlyOneInMiddle_Cluster {
            get {
                return ResourceManager.GetString("ConditionalGenericOnlyOneInMiddle_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.NonGeneric.Hierarchy2
        ///{
        ///    public partial class ConditionalNonGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithTransientScope()
        ///                .When(rc =&gt; false)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalNonGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ConditionalNonGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.NonGeneric.Hierarchy2SameConstant
        ///{
        ///    public partial class ConditionalNonGenericHierarchy2SameConstant_Cluster : DefaultCluster
        ///    {
        ///        public static readonly A ConstantA1 = new();
        ///        public static readonly A ConstantA2 = new();
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .WithConstScope(Consta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalNonGenericHierarchy2SameConstant_Cluster {
            get {
                return ResourceManager.GetString("ConditionalNonGenericHierarchy2SameConstant_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Collections.Generic;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.NonGeneric.Hierarchy3First
        ///{
        ///    public partial class ConditionalNonGenericHierarchy3First_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalNonGenericHierarchy3First_Cluster {
            get {
                return ResourceManager.GetString("ConditionalNonGenericHierarchy3First_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Collections.Generic;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.NonGeneric.Hierarchy3Second
        ///{
        ///    public partial class ConditionalNonGenericHierarchy3Second_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalNonGenericHierarchy3Second_Cluster {
            get {
                return ResourceManager.GetString("ConditionalNonGenericHierarchy3Second_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conditional.NonGeneric.OnlyOneInMiddle
        ///{
        ///    public partial class ConditionalNonGenericOnlyOneInMiddle_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IB [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalNonGenericOnlyOneInMiddle_Cluster {
            get {
                return ResourceManager.GetString("ConditionalNonGenericOnlyOneInMiddle_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conventions.From2Interfaces0
        ///{
        ///    public partial class ConventionsFrom2Interfaces0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;A0&gt;()
        ///                .SelectAllWith&lt;IA&gt;()
        ///                .From&lt;IA, IB&gt;()
        ///                .ToItself()
        ///                .WithSingletonScope()
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConventionsFrom2Interfaces0_Cluster {
            get {
                return ResourceManager.GetString("ConventionsFrom2Interfaces0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Linq;
        ///using System.Text;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conventions.FromGenericInterface0
        ///{
        ///    public partial class ConventionsFromGenericInterface0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;A0&gt;()
        ///                .SelectAllWithOpenGeneric&lt;IA&lt;object&gt;&gt;()
        ///                .ExcludeAllWithOpenGeneric&lt;IExclude&lt;object [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConventionsFromGenericInterface0_Cluster {
            get {
                return ResourceManager.GetString("ConventionsFromGenericInterface0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections;
        ///using System.Linq;
        ///using System.Text;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conventions.FromGenericInterface1
        ///{
        ///    public partial class ConventionsFromGenericInterface1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;A0&gt;()
        ///                .SelectAllWithOpenGeneric&lt;IA&lt;IEnumerable, Array&gt;&gt;()
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConventionsFromGenericInterface1_Cluster {
            get {
                return ResourceManager.GetString("ConventionsFromGenericInterface1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conventions.FromSingleInterface0
        ///{
        ///    public partial class ConventionsFromSingleInterface0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;A0&gt;()
        ///                .SelectAllWith&lt;IA&gt;()
        ///                .FromAllInterfaces()
        ///                .ToItself()
        ///                .WithSingletonSc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConventionsFromSingleInterface0_Cluster {
            get {
                return ResourceManager.GetString("ConventionsFromSingleInterface0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Conventions.FromSingleInterface1
        ///{
        ///    public partial class ConventionsFromSingleInterface1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;A0&gt;()
        ///                .SelectAllWith&lt;IA&gt;()
        ///                .ExcludeAllWith&lt;IExclude&gt;()
        ///                .From&lt;IA&gt;()
        ///                .ToItself [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConventionsFromSingleInterface1_Cluster {
            get {
                return ResourceManager.GetString("ConventionsFromSingleInterface1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///using System;
        ///
        ///namespace DpdtInject.Tests.DefaultValue.Custom
        ///{
        ///    public partial class DefaultValueCustom_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Int_Const&gt;()
        ///                .To&lt;Int_Const&gt;()
        ///                .WithCustomScope()
        ///                ;
        ///            Bind&lt;Int_Default&gt;() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultValueCustom_Cluster {
            get {
                return ResourceManager.GetString("DefaultValueCustom_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///using System;
        ///
        ///namespace DpdtInject.Tests.DefaultValue.Singleton
        ///{
        ///    public partial class DefaultValueSingleton_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Int_Const&gt;()
        ///                .To&lt;Int_Const&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///            Bind&lt;Int_D [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultValueSingleton_Cluster {
            get {
                return ResourceManager.GetString("DefaultValueSingleton_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///using System;
        ///
        ///namespace DpdtInject.Tests.DefaultValue.Transient
        ///{
        ///    public partial class DefaultValueTransient_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Int_Const&gt;()
        ///                .To&lt;Int_Const&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///            Bind&lt;Int_D [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultValueTransient_Cluster {
            get {
                return ResourceManager.GetString("DefaultValueTransient_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.Complex0
        ///{
        ///    public partial class FactoryComplex0_Cluster : DefaultCluster
        ///    {
        ///        public const string A = &quot;0&quot;;
        ///        public const int B = 1;
        ///        public const long C = 2L;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                .ToIsolatedFactory&lt;AFactory&gt;()
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryComplex0_Cluster {
            get {
                return ResourceManager.GetString("FactoryComplex0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.ConstructorArgument0
        ///{
        ///    public partial class FactoryConstructorArgument0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                .ToIsolatedFactory&lt;AFactory&gt;()
        ///                .WithPayload&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryConstructorArgument0_Cluster {
            get {
                return ResourceManager.GetString("FactoryConstructorArgument0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.Simple0
        ///{
        ///    public partial class FactorySimple0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                .ToIsolatedFactory&lt;AFactory&gt;()
        ///                .WithPayload&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class FactorySimple0_ClusterTes [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactorySimple0_Cluster {
            get {
                return ResourceManager.GetString("FactorySimple0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.UnknownConstructorArgument0
        ///{
        ///    public partial class FactoryUnknownConstructorArgument0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                .ToIsolatedFactory&lt;AFactory&gt;()
        ///                .WithPayload&lt;A&gt;()
        ///                .WithSingletonScope()
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryUnknownConstructorArgument0_Cluster {
            get {
                return ResourceManager.GetString("FactoryUnknownConstructorArgument0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.UnknownConstructorArgument1
        ///{
        ///    public partial class FactoryUnknownConstructorArgument1_Cluster : DefaultCluster
        ///    {
        ///        public const string A = &quot;0&quot;;
        ///        public const int B = 1;
        ///        public const long C = 2L;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryUnknownConstructorArgument1_Cluster {
            get {
                return ResourceManager.GetString("FactoryUnknownConstructorArgument1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Factory.UnrelatedMethod
        ///{
        ///    public partial class FactoryUnrelatedMethod_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAFactory&gt;()
        ///                .ToIsolatedFactory&lt;AFactory&gt;()
        ///                .WithPayload&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class FactoryUn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FactoryUnrelatedMethod_Cluster {
            get {
                return ResourceManager.GetString("FactoryUnrelatedMethod_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.Hierarchy2Conditional
        ///{
        ///    public partial class GetAllGenericHierarchy2Conditional_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IZ&gt;()
        ///                .To&lt;Z&gt;()
        ///                .WithSingletonScope()
        ///                .When(rt =&gt; rt.IsGetAllResolution)
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericHierarchy2Conditional_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericHierarchy2Conditional_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.NoBinding
        ///{
        ///    public partial class GetAllGenericNoBinding_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            //nothing!
        ///        }
        ///
        ///        public class GetAllGenericNoBinding_ClusterTester
        ///        {
        ///            public void PerformClusterTesting()
        ///            {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericNoBinding_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericNoBinding_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.SingleObject
        ///{
        ///    public partial class GetAllGenericSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class GetAllGenericSingleObject_ClusterTester
        ///        {
        ///            pu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericSingleObject_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.TwoObjects
        ///{
        ///    public partial class GetAllGenericTwoObjects_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericTwoObjects_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericTwoObjects_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.TwoObjectsConditional0
        ///{
        ///    public partial class GetAllGenericTwoObjectsConditional0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                .When(rt =&gt; false)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericTwoObjectsConditional0_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericTwoObjectsConditional0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.Generic.TwoObjectsConditional1
        ///{
        ///    public partial class GetAllGenericTwoObjectsConditional1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                .When(rt =&gt; rt.IsGetAllResolution)
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllGenericTwoObjectsConditional1_Cluster {
            get {
                return ResourceManager.GetString("GetAllGenericTwoObjectsConditional1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.Hierarchy2Conditional
        ///{
        ///    public partial class GetAllNonGenericHierarchy2Conditional_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IZ&gt;()
        ///                .To&lt;Z&gt;()
        ///                .WithSingletonScope()
        ///                .When(rt  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericHierarchy2Conditional_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericHierarchy2Conditional_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Collections.Generic;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.NoBinding
        ///{
        ///    public partial class GetAllNonGenericNoBinding_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            //nothing!
        ///        }
        ///
        ///        public class GetAllNonGenericNoBinding_ClusterTester
        ///        {
        ///            public void Pe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericNoBinding_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericNoBinding_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Collections.Generic;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.SingleObject
        ///{
        ///    public partial class GetAllNonGenericSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class GetAllNonGenericSingleObj [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericSingleObject_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.TwoObjects
        ///{
        ///    public partial class GetAllNonGenericTwoObjects_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericTwoObjects_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericTwoObjects_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.TwoObjectsConditional0
        ///{
        ///    public partial class GetAllNonGenericTwoObjectsConditional0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                .When(rt =&gt; false)
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericTwoObjectsConditional0_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericTwoObjectsConditional0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.GetAll.NonGeneric.TwoObjectsConditional1
        ///{
        ///    public partial class GetAllNonGenericTwoObjectsConditional1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithSingletonScope()
        ///                .When( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAllNonGenericTwoObjectsConditional1_Cluster {
            get {
                return ResourceManager.GetString("GetAllNonGenericTwoObjectsConditional1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.NonGeneric.IncorrectRequest
        ///{
        ///    public partial class NonGenericIncorrectRequest_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class NonGener [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NonGenericIncorrectRequest_Cluster {
            get {
                return ResourceManager.GetString("NonGenericIncorrectRequest_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Text;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.Event0
        ///{
        ///    public partial class ProxyEvent0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Session [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxyEvent0_Cluster {
            get {
                return ResourceManager.GetString("ProxyEvent0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.Indexer0
        ///{
        ///    public partial class ProxyIndexer0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxyIndexer0_Cluster {
            get {
                return ResourceManager.GetString("ProxyIndexer0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.Property0
        ///{
        ///    public partial class ProxyProperty0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///                .To&lt;Sess [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxyProperty0_Cluster {
            get {
                return ResourceManager.GetString("ProxyProperty0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.Simple0
        ///{
        ///    public partial class ProxySimple0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///                .To&lt;SessionS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxySimple0_Cluster {
            get {
                return ResourceManager.GetString("ProxySimple0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.SimpleWithDefault0
        ///{
        ///    public partial class ProxySimpleWithDefault0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxySimpleWithDefault0_Cluster {
            get {
                return ResourceManager.GetString("ProxySimpleWithDefault0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.SimpleWithOut0
        ///{
        ///    public partial class ProxySimpleWithOut0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxySimpleWithOut0_Cluster {
            get {
                return ResourceManager.GetString("ProxySimpleWithOut0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.Circular;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src.RContext;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Proxy.TwoSameProxy
        ///{
        ///    public partial class ProxyTwoSameProxy_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;SessionSaver&gt;()
        ///                .T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProxyTwoSameProxy_Cluster {
            get {
                return ResourceManager.GetString("ProxyTwoSameProxy_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Generic.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeConstantGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        private static readonly A AInstance = new();
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .WithConstScope(AInstance)
        ///                //.Setup&lt;MustBeCrossClu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.NonGeneric.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeConstantNonGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        private static readonly A AInstance = new();
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .WithConstScope(AInstance)
        ///                ;
        ///        }
        ///
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantNonGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantNonGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.F0
        ///{
        ///    public partial class ScopeConstantTargetF0_Cluster : DefaultCluster
        ///    {
        ///        //NOT A READONLY!!!
        ///        // ReSharper disable once FieldCanBeMadeReadOnly.Local
        ///        private string _someString;
        ///
        ///#if IN_UNIT_TEST_SYMBOL
        ///        /// &lt;inheritdoc /&gt;
        ///        public ScopeConstantTargetF0_Cluster()
        ///            : this((ICluster)null!)
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetF0_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetF0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.InPlace0
        ///{
        ///    public partial class ScopeConstantTargetInPlace0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;string&gt;()
        ///                .WithConstScope(&quot;my const string&quot;) //no not extract it! we checks in-place constant in this test!
        ///                ;
        ///        }
        ///
        ///        publi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetInPlace0_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetInPlace0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.InPlace1
        ///{
        ///    public partial class ScopeConstantTargetInPlace1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;ulong&gt;()
        ///                .WithConstScope(123456789UL) //no not extract it! we checks in-place constant in this test!
        ///                ;
        ///        }
        ///
        ///        public class [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetInPlace1_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetInPlace1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.M0
        ///{
        ///    public partial class ScopeConstantTargetM0_Cluster : DefaultCluster
        ///    {
        ///        private string GetSomeString() =&gt; Guid.NewGuid().ToString();
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;string&gt;()
        ///                .WithConstScope(this.GetSomeString())
        ///                ;
        ///        }
        ///
        ///        publi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetM0_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetM0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.RO0
        ///{
        ///    public partial class ScopeConstantTargetRO0_Cluster : DefaultCluster
        ///    {
        ///        private readonly string _roString;
        ///
        ///        #if IN_UNIT_TEST_SYMBOL
        ///        /// &lt;inheritdoc /&gt;
        ///        public ScopeConstantTargetRO0_Cluster()
        ///            : this((ICluster)null!)
        ///        {
        ///            _roString = &quot;readonly string&quot;;
        ///        }
        ///        #endi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetRO0_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetRO0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Constant.Target.SRO0
        ///{
        ///    public partial class ScopeConstantTargetSRO0_Cluster : DefaultCluster
        ///    {
        ///        private static readonly string _roString = &quot;readonly string&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;string&gt;()
        ///                .WithConstScope(_roString)
        ///                ;
        ///        }
        ///
        ///        public clas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeConstantTargetSRO0_Cluster {
            get {
                return ResourceManager.GetString("ScopeConstantTargetSRO0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.Generic.Hierarchy2
        ///{
        ///    public partial class ScopeCustomGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithCustomScope()
        ///                ;
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.Generic.Hierarchy2DifferentCluster
        ///{
        ///    public partial class ScopeCustomGenericHierarchy2DifferentCluster_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomGenericHierarchy2DifferentCluster_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomGenericHierarchy2DifferentCluster_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.Generic.SingleObject
        ///{
        ///    public partial class ScopeCustomGenericSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithCustomScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomGenericSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomGenericSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.NonGeneric.Hierarchy2
        ///{
        ///    public partial class ScopeCustomNonGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithCustomScope()
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomNonGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomNonGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.NonGeneric.Hierarchy2DifferentCluster
        ///{
        ///    public partial class ScopeCustomNonGenericHierarchy2DifferentCluster_FirstCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomNonGenericHierarchy2DifferentCluster_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomNonGenericHierarchy2DifferentCluster_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Excp;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Custom.NonGeneric.SingleObject
        ///{
        ///    public partial class ScopeCustomNonGenericSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithCustomScope()
        ///                ;
        ///        }
        ///
        ///        public class  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeCustomNonGenericSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeCustomNonGenericSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Fast.Hierarchy2
        ///{
        ///    public partial class ScopeSingletonFastHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithSingletonScope()
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonFastHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonFastHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Fast.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeSingletonFastSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingletonFastSingleI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonFastSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonFastSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Fast.TwoInterfacesSingleObject
        ///{
        ///    public partial class ScopeSingletonFastTwoInterfacesSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA0, IA1&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingletonFastTwoIn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonFastTwoInterfacesSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonFastTwoInterfacesSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Generic.Hierarchy2
        ///{
        ///    public partial class ScopeSingletonGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithSingletonScope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Generic.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeSingletonGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingletonGener [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Generic.SingleObjectDefinedArgument
        ///{
        ///    public partial class ScopeSingletonGenericSingleObjectDefinedArgument_Cluster : DefaultCluster
        ///    {
        ///        const string CustomMesage = &quot;custom message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                . [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonGenericSingleObjectDefinedArgument_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonGenericSingleObjectDefinedArgument_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Generic.TwoInterfacesSingleObject
        ///{
        ///    public partial class ScopeSingletonGenericTwoInterfacesSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA0, IA1&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingletonGen [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonGenericTwoInterfacesSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonGenericTwoInterfacesSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.NonGeneric.Hierarchy2
        ///{
        ///    public partial class ScopeSingletonNonGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithSingleto [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonNonGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonNonGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.NonGeneric.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeSingletonNonGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingleto [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonNonGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonNonGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.NonGeneric.TwoInterfacesSingleObject
        ///{
        ///    public partial class ScopeSingletonNonGenericTwoInterfacesSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA0, IA1&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeSingle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeSingletonNonGenericTwoInterfacesSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeSingletonNonGenericTwoInterfacesSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Transient.Generic.Hierarchy2
        ///{
        ///    public partial class ScopeTransientGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithTransientScope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeTransientGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("ScopeTransientGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Transient.Generic.SingleInterfaceSingleObject
        ///{
        ///    public partial class ScopeTransientGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeTransientGener [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeTransientGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeTransientGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Transient.Generic.SingleObjectDefinedArgument
        ///{
        ///    public partial class ScopeTransientGenericSingleObjectDefinedArgument_Cluster : DefaultCluster
        ///    {
        ///        const string CustomMesage = &quot;custom message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                . [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeTransientGenericSingleObjectDefinedArgument_Cluster {
            get {
                return ResourceManager.GetString("ScopeTransientGenericSingleObjectDefinedArgument_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Transient.Generic.TwoInterfacesSingleObject
        ///{
        ///    public partial class ScopeTransientGenericTwoInterfacesSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA0, IA1&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        }
        ///
        ///        public class ScopeTransientGen [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ScopeTransientGenericTwoInterfacesSingleObject_Cluster {
            get {
                return ResourceManager.GetString("ScopeTransientGenericTwoInterfacesSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.AllAndOrder.One
        ///{
        ///    public partial class SettingsConstructorAllAndOrderOne_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorAllAndOrderOne_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorAllAndOrderOne_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.AllAndOrder.Two
        ///{
        ///    public partial class SettingsConstructorAllAndOrderTwo_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///
        ///            Bind&lt;B&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithTransientScope()
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorAllAndOrderTwo_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorAllAndOrderTwo_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.SubsetAndOrder.One
        ///{
        ///    public partial class SettingsConstructorSubsetAndOrderOne_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorSubsetAndOrderOne_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorSubsetAndOrderOne_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.SubsetAndOrder.Two
        ///{
        ///    public partial class SettingsConstructorSubsetAndOrderTwo_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorSubsetAndOrderTwo_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorSubsetAndOrderTwo_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.SubsetNoOrder.One
        ///{
        ///    public partial class SettingsConstructorSubsetNoOrderOne_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorSubsetNoOrderOne_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorSubsetNoOrderOne_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Settings.Constructor.SubsetNoOrder.Two
        ///{
        ///    public partial class SettingsConstructorSubsetNoOrderTwo_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsConstructorSubsetNoOrderTwo_Cluster {
            get {
                return ResourceManager.GetString("SettingsConstructorSubsetNoOrderTwo_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Settings.CrossCluster.MustBeCrossCluster0
        ///{
        ///    public partial class SettingsCrossClusterMustBeCrossCluster0_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsCrossClusterMustBeCrossCluster0_Cluster {
            get {
                return ResourceManager.GetString("SettingsCrossClusterMustBeCrossCluster0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind.Settings.CrossCluster;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Settings.CrossCluster.OnlyLocalCluster0
        ///{
        ///    public partial class SettingsCrossClusterOnlyLocalCluster0_RootCluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///        }
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsCrossClusterOnlyLocalCluster0_Cluster {
            get {
                return ResourceManager.GetString("SettingsCrossClusterOnlyLocalCluster0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Scope.Singleton.Dispose
        ///{
        ///    public partial class SingletonDispose_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///
        ///        public class SingletonDispose_ClusterTester
        ///        {
        ///            public  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SingletonDispose_Cluster {
            get {
                return ResourceManager.GetString("SingletonDispose_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.BindFrom3And4
        ///{
        ///    public partial class UnsortedBindFrom3And4_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IAInterface0, IAInterface1, IAInterface2&gt;()
        ///                .To&lt;AClass012&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;IBInterface0, IBInterface1, I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedBindFrom3And4_Cluster {
            get {
                return ResourceManager.GetString("UnsortedBindFrom3And4_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.CannotBeCasted
        ///{
        ///    public partial class UnsortedCannotBeCasted_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                .Configure(new ConstructorArgument(&quot;message&quot;, Message))
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedCannotBeCasted_Cluster {
            get {
                return ResourceManager.GetString("UnsortedCannotBeCasted_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.CircularDependency3
        ///{
        ///    public partial class UnsortedCircularDependency3_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithTransientScope()
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedCircularDependency3_Cluster {
            get {
                return ResourceManager.GetString("UnsortedCircularDependency3_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.ComplexTypeArgument0
        ///{
        ///    public partial class UnsortedComplexTypeArgument0_Cluster : DefaultCluster
        ///    {
        ///        public static readonly Func&lt;Func&lt;object&gt;, Func&lt;string&gt;&gt; Funca =
        ///            fo =&gt; new Func&lt;string&gt;(() =&gt; fo().ToString());
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Func&lt;Func&lt;object&gt;, Func&lt;string&gt;&gt;&gt;()        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedComplexTypeArgument0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedComplexTypeArgument0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using UnknownCustomNamespace;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.CustomNamespace
        ///{
        ///    public partial class UnsortedCustomNamespace_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;A&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                .Configure(
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedCustomNamespace_Cluster {
            get {
                return ResourceManager.GetString("UnsortedCustomNamespace_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #if !IN_UNIT_TEST_SYMBOL
        ///#endif
        ///
        ///// ReSharper disable once CheckNamespace
        ///namespace UnknownCustomNamespace
        ///{
        ///    public class FakeResource
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string UnsortedCustomNamespace_FakeResource {
            get {
                return ResourceManager.GetString("UnsortedCustomNamespace_FakeResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.DisposeAndException
        ///{
        ///    public partial class UnsortedDisposeAndException_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;BaseClass&gt;()
        ///                .To&lt;BaseClass&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;DerivedClass&gt;()
        ///                .To&lt;DerivedClas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedDisposeAndException_Cluster {
            get {
                return ResourceManager.GetString("UnsortedDisposeAndException_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.DisposeAndException2
        ///{
        ///    public partial class UnsortedDisposeAndException2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;Class1&gt;()
        ///                .To&lt;Class1&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///
        ///            Bind&lt;Class2&gt;()
        ///                .To&lt;Class2&gt;()
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedDisposeAndException2_Cluster {
            get {
                return ResourceManager.GetString("UnsortedDisposeAndException2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.Dynamic0
        ///{
        ///    public partial class UnsortedDynamic0_Cluster : DefaultCluster
        ///    {
        ///        public static readonly dynamic Constant = (123, new int[,]{ { 1, 2 }, { 3, 4 } });
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;object, dynamic&gt;()
        ///                .WithConstScope(Constant)
        ///                ;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedDynamic0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedDynamic0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.Dynamic1
        ///{
        ///    public partial class UnsortedDynamic1_Cluster : DefaultCluster
        ///    {
        ///        public static readonly (nuint, int[,]) Constant = (123, new int[,]{ { 1, 2 }, { 3, 4 } });
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;object, dynamic&gt;()
        ///                .WithConstScope(Constant)
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedDynamic1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedDynamic1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.Dynamic2
        ///{
        ///    public partial class UnsortedDynamic2_Cluster : DefaultCluster
        ///    {
        ///        public static readonly dynamic Constant = (123, new int[,]{ { 1, 2 }, { 3, 4 } });
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;object&gt;()
        ///                .WithConstScope(Constant)
        ///                ;
        ///
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedDynamic2_Cluster {
            get {
                return ResourceManager.GetString("UnsortedDynamic2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.FromAllInterfaces0
        ///{
        ///    public partial class UnsortedFromAllInterfaces0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            BindAllInterfaces()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class UnsortedFromAllInterfaces0_ClusterTester
        ///        {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedFromAllInterfaces0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedFromAllInterfaces0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.GenericInterface
        ///{
        ///    public partial class UnsortedGenericInterface_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;To&lt;string&gt;&gt;()
        ///                .To&lt;ToIsolatedFactory&lt;int&gt;&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class UnsortedGenericInterface_ClusterTester
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedGenericInterface_Cluster {
            get {
                return ResourceManager.GetString("UnsortedGenericInterface_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.Generic.IsRegistered
        ///{
        ///    public partial class UnsortedGenericIsRegistered_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithTransientScope()
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedGenericIsRegistered_Cluster {
            get {
                return ResourceManager.GetString("UnsortedGenericIsRegistered_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.GetAllDuplicate0
        ///{
        ///    public partial class UnsortedGetAllDuplicate0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            ScanInAssembliesWith&lt;Handler1&gt;()
        ///                .SelectAllWith&lt;IHandler&gt;()
        ///                .FromAllInterfaces()
        ///                .ToItself()
        ///                .WithTransientScope()
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedGetAllDuplicate0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedGetAllDuplicate0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///using System.Collections;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Unsorted.GetAllDuplicate1
        ///{
        ///    public partial class UnsortedGetAllDuplicate1_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;HandlerContainer&gt;()
        ///                .To&lt;HandlerContainer&gt;()
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedGetAllDuplicate1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedGetAllDuplicate1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.InvalidToType
        ///{
        ///    public partial class UnsortedInvalidToType_Cluster : DefaultCluster
        ///    {
        ///        public const string Message = &quot;some message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;IA&gt;()
        ///                .WithSingletonScope()
        ///                .Configure(new ConstructorArgument(&quot;message&quot;, Message))
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedInvalidToType_Cluster {
            get {
                return ResourceManager.GetString("UnsortedInvalidToType_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.MDArray1
        ///{
        ///    public partial class UnsortedMDArray1_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[][] Constant = new int[2][] { new int[] { 1, 2 }, new int[] { 2, 3 } };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;int[][]&gt;()
        ///                .WithConstScope(Constant)
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedMDArray1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedMDArray1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.MDArray2
        ///{
        ///    public partial class UnsortedMDArray2_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[][][] Constant = new int[2][][] { new int[2][] { new int[] { 1, 2 }, new int[] { 2, 3 } }, new int[2][] { new int[] { 1, 2 }, new int[] { 2, 3 } } };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedMDArray2_Cluster {
            get {
                return ResourceManager.GetString("UnsortedMDArray2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using DpdtInject.Injector.Src.Bind.Settings.Constructor;
        ///using DpdtInject.Injector.Src.Bind;
        ///
        ///namespace DpdtInject.Tests.Unsorted.MirroredArguments0
        ///{
        ///    public partial class UnsortedMirroredArguments0_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;MyClass&gt;()
        ///                .To&lt;MyClass&gt;()
        ///                .WithSingletonScope( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedMirroredArguments0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedMirroredArguments0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.NativeNumber0
        ///{
        ///    public partial class UnsortedNativeNumber0_Cluster : DefaultCluster
        ///    {
        ///        public static readonly nuint Constant = 123;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;nuint&gt;()
        ///                .WithConstScope(Constant)
        ///                ;
        ///
        ///            Bind&lt;A&gt;()
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedNativeNumber0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedNativeNumber0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.NativeTypeArgument0
        ///{
        ///    public partial class UnsortedNativeTypeArgument0_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;string&gt;()
        ///                .WithConstScope(DefaultMessage)
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedNativeTypeArgument0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedNativeTypeArgument0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.NonGeneric.IsRegistered
        ///{
        ///    public partial class UnsortedNonGenericIsRegistered_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithTransientScope()        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedNonGenericIsRegistered_Cluster {
            get {
                return ResourceManager.GetString("UnsortedNonGenericIsRegistered_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src.Bind;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.OptionalArgument0
        ///{
        ///    public partial class UnsortedOptionalArgument0_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///        public const string CustomMessage = &quot;custom message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedOptionalArgument0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedOptionalArgument0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.OptionalArgument1
        ///{
        ///    public partial class UnsortedOptionalArgument1_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                ;
        ///        }
        ///
        ///        public class  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedOptionalArgument1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedOptionalArgument1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.PlainArray0
        ///{
        ///    public partial class UnsortedPlainArray0_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[] Constant = new int[] { 1, 2, 3, 4, 5 };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;int[]&gt;()
        ///                .WithConstScope(Constant)
        ///                ;
        ///
        ///            Bin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedPlainArray0_Cluster {
            get {
                return ResourceManager.GetString("UnsortedPlainArray0_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.PlainArray1
        ///{
        ///    public partial class UnsortedPlainArray1_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[,] Constant = new int[,] { { 1, 2, 3, 4, 5 }, { 5, 6, 7, 8, 9 } };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;int[,]&gt;()
        ///                .WithConstScope(Constant)
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedPlainArray1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedPlainArray1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.PlainArray2
        ///{
        ///    public partial class UnsortedPlainArray2_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[,,] Constant = new int[,,] { { { 1, 2 }, { 3, 4 } }, { { 5, 6 }, { 7, 8 } } };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;int[,,]&gt;()
        ///                .WithConstScope(Constant [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedPlainArray2_Cluster {
            get {
                return ResourceManager.GetString("UnsortedPlainArray2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.PlainArray2
        ///{
        ///    public partial class UnsortedPlainArray2_Cluster : DefaultCluster
        ///    {
        ///        public static readonly int[,,] Constant = new int[,,] { { { 1, 2 }, { 3, 4 } }, { { 5, 6 }, { 7, 8 } } };
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;int[,,]&gt;()
        ///                .WithConstScope(Constant [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedPlainArray2_Cluster1 {
            get {
                return ResourceManager.GetString("UnsortedPlainArray2_Cluster1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.SingletonCustom
        ///{
        ///    public partial class UnsortedSingletonCustom_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithCustomScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithSingletonScope()
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedSingletonCustom_Cluster {
            get {
                return ResourceManager.GetString("UnsortedSingletonCustom_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.SingletonTransient
        ///{
        ///    public partial class UnsortedSingletonTransient_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt;B&gt;()
        ///                .WithSingletonSco [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedSingletonTransient_Cluster {
            get {
                return ResourceManager.GetString("UnsortedSingletonTransient_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.TooManyChildren
        ///{
        ///    public partial class UnsortedTooManyChildren_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A0&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A1&gt;()
        ///                .WithTransientScope()
        ///                ;
        ///
        ///            Bind&lt;IB&gt;()
        ///                .To&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedTooManyChildren_Cluster {
            get {
                return ResourceManager.GetString("UnsortedTooManyChildren_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///using System.Linq;
        ///
        ///namespace DpdtInject.Tests.Unsorted.Tuple1
        ///{
        ///    public partial class UnsortedTuple1_Cluster : DefaultCluster
        ///    {
        ///        public static readonly (nuint, int[,]) Constant = (123, new int[,]{ { 1, 2 }, { 3, 4 } });
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;(nuint, int[,])&gt;()
        ///                .WithConstScope(Constant)
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedTuple1_Cluster {
            get {
                return ResourceManager.GetString("UnsortedTuple1_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Unsorted.TwoBindMethods
        ///{
        ///    public partial class UnsortedTwoBindMethods_Cluster : DefaultCluster
        ///    {
        ///        public const string DefaultMessage = &quot;default message&quot;;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod1()
        ///        {
        ///            Bind&lt;string&gt;()
        ///                .WithConstScope(DefaultMessage)
        ///                ;
        ///        }
        ///
        ///        [DpdtBindingMet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnsortedTwoBindMethods_Cluster {
            get {
                return ResourceManager.GetString("UnsortedTwoBindMethods_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.Generic.DeclaredFunc
        ///{
        ///    public partial class WrapperFuncGenericDeclaredFunc_Cluster : DefaultCluster
        ///    {
        ///        public static readonly A AInstance = new();
        ///        public static readonly Func&lt;IA&gt; Funca = () =&gt; AInstance;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncGenericDeclaredFunc_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncGenericDeclaredFunc_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.Generic.Hierarchy2
        ///{
        ///    public partial class WrapperFuncGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .Setup&lt;ProduceWrappers&gt;()
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.Generic.SingleInterfaceSingleObject
        ///{
        ///    public partial class WrapperFuncGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.NonGeneric.DeclaredFunc
        ///{
        ///    public partial class WrapperFuncNonGenericDeclaredFunc_Cluster : DefaultCluster
        ///    {
        ///        public static readonly A AInstance = new();
        ///        public static readonly Func&lt;IA&gt; Funca = () =&gt; AInstance;
        ///
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncNonGenericDeclaredFunc_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncNonGenericDeclaredFunc_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.NonGeneric.Hierarchy2
        ///{
        ///    public partial class WrapperFuncNonGenericHierarchy2_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///                .Setup&lt;ProduceWrapper [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncNonGenericHierarchy2_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncNonGenericHierarchy2_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.NonGeneric.SingleInterfaceSingleObject
        ///{
        ///    public partial class WrapperFuncNonGenericSingleInterfaceSingleObject_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithTransientScope()
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncNonGenericSingleInterfaceSingleObject_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncNonGenericSingleInterfaceSingleObject_Cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using System;
        ///using DpdtInject.Injector.Src.Bind.Settings.Wrapper;
        ///using DpdtInject.Injector.Src;
        ///
        ///namespace DpdtInject.Tests.Wrapper.Func.Singleton
        ///{
        ///    public partial class WrapperFuncSingleton_Cluster : DefaultCluster
        ///    {
        ///        [DpdtBindingMethod]
        ///        public void BindMethod()
        ///        {
        ///            Bind&lt;IA&gt;()
        ///                .To&lt;A&gt;()
        ///                .WithSingletonScope()
        ///                .Setup&lt;ProduceWrappers&gt;()
        ///                ; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WrapperFuncSingleton_Cluster {
            get {
                return ResourceManager.GetString("WrapperFuncSingleton_Cluster", resourceCulture);
            }
        }
    }
}
